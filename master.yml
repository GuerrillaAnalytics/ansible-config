---
# run locally here, yadda yadda yadda

- hosts: local
  any_errors_fatal: true
  # ensure Python2 is installed for ansible to work correctly
  # switch off gather_facts temporarily as that also fails without
  # Python2 present
  gather_facts: no
  pre_tasks:
    - name: 'install python2'
      raw: sudo apt-get -y install python
      when: ansible_os_family == 'Debian'

    - name: Ensure brew is installed on Mac
      include_role:
        name: ansible-role-homebrew
      when: ansible_os_family == 'Darwin'

  gather_facts: yes

  vars:
    pycharm_edition: community
    pycharm_version: 2018.3.4
    # pycharm_install_prefix: ansible_env.HOME

  connection: local
  #become: yes

  tasks:
    - name: Print ansible_os_family
      debug: var=ansible_os_family


    - name: Install Atom if on Linux
      include_role:
        name: ansible-role-atom
      when: ansible_os_family == 'Debian'

    - name: Install PyCharm on Linux
      include_role:
        name: ansible-role-pycharm
      vars:
          pycharm_version: 2018.3.5
          pycharm_edition: community
      when: ansible_os_family == 'Debian'

    - name: Install Chrome on linux
      include_role:
          name: ansible-role-chrome-linux
      when: ansible_os_family == 'Debian'


    - name: Setup default git configuraiton
      become: true
      git_config:
        name="{{ item.name }}"
        scope=global
        value="{{ item.value }}"
      with_items:
        - {name: "user.name",  value: "UserName" }
        - {name: "user.email", value: "user.name@gmail.com" }
        - {name: "ui.color",   value: "True" }
        - {name: "credential.helper",   value: "store" }
      tags:
          - git


    - name: Install awscli
      pip:
        name: awscli
        #version: "{{ awscli_version }}"
        extra_args: --user
      tags: awscli

    - name: Ensure ~/.aws directory exists
      file: >
        path="{{ ansible_env.HOME }}/.aws"
        state=directory
      tags: awscli

    # - name: Install ~/.aws/credentials
    #   copy:
    #     src: credentials
    #     dest: "{{ home_directory }}/.aws/credentials"
    #     mode: 0644

  roles:
    - role: ansible-data-science-cli
      tags: data-science-cli

    - role: ansible-postgresql
      tags: postgresql

    - role: ansible-pyenv
      become: no
      # If you get macos errors about missing developer packages then:
      # If you have an Apple developer account, this can be resolved by
      # downloading Command Line Tools (macOS 10.14) for Xcode 10 from
      # Apple's download page and then installing that package
      vars:
        #pyenv_global: "3.7.3"

        # Versions to install
        pyenv_version: "v1.2.9"
        #pyenv_virtualenv_version: "v1.1.5"

        # Initialize shell profile scripts
        pyenv_init_shell: yes

        # Python versions to install
        pyenv_python_versions:
          - "2.7.16"
          - "3.7.3"

        # Optionally, install virtualenvwrapper plugin for pyenv
        pyenv_virtualenvwrapper: no
      tags: pyenv
