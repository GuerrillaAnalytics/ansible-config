
# run locally here, yadda yadda yadda

- hosts: local
  any_errors_fatal: true
  # ensure Python2 is installed for ansible to work correctly
  # switch off gather_facts temporarily as that also fails without
  # Python2 present
  gather_facts: no
  pre_tasks:
    - name: 'install python2'
      become: yes
      raw: apt-get -y install python #python-pip
      when: ansible_os_family == 'Debian'


    - name: Ensure brew is installed on Mac
      include_role:
        name: ansible-role-homebrew
      when: ansible_os_family == 'Darwin'

    - name: ensure aptitude is installed on Linux
      become: yes
      apt:
        name: aptitude
        state: latest
      when: ansible_os_family == 'Debian'
      tags: aptitude

    - name: ensure snap is installed on Linux
      become: yes
      apt:
        name: snapd
        state: latest
      when: ansible_os_family == 'Debian'
      tags: snap

    - name: Add a group 'docker' for use by docker
      become: yes
      group:
        name: docker
        state: present
      when: ansible_os_family == 'Debian'
      tags: docker

    - name: add current user to docker group
      user:
        name: "{{ ansible_env.USER }}"
        groups: docker
        append: yes

    - name: Change ownership for docker without sudo
      become: yes
      file:
        path: /var/run/docker.sock
        owner: "root"
        group: "docker"
      tags: docker

  gather_facts: yes

  connection: local
  #become: yes

  tasks:
    - name: set up bash terminal colours
      lineinfile:
        create: yes
        # mode: 0600
        dest: ~/.bash_profile
        # owner: root
        regexp: '^PS1='
        line: PS1="\[\033[36m\]\u\[\033[m\]@\[\033[32m\]\h:\[\033[33;1m\]\w\[\033[m\]\$ "
        state: present
      tags: bash
    - name: set up ls colours in terminal
      lineinfile:
        create: yes
        # mode: 0600
        dest: ~/.bash_profile
        # owner: root
        regexp: '^LSCOLORS='
        #line: LSCOLORS=GxFxCxDxBxegedabagaced
        line: LSCOLORS=di=1;32:ln=0:so=32:pi=33:ex=31:bd=34;46:cd=34;43:su=31:sg=31:tw=1;30;42:ow=1;30;43
        state: present
      tags: bash


    - name: Upgrade apt cache on Linux
      become: yes
      apt:
        upgrade: yes
        cache_valid_time: 604800 #update cache if been more than one day in secs
      when: ansible_os_family == 'Debian'
      tags: upgrade

    - name: Upgrade homebrew packages on Mac
      homebrew:
        update_homebrew: yes
        upgrade_all: yes
      when: ansible_os_family == 'Darwin'
      tags: upgrade

    - name: Install DigiKam photo management
      become: yes
      apt:
        name: digikam
        state: latest
        update_cache: true
      when: ansible_os_family == 'Debian'
      tags: digikam

    # Search for apt files online and on machine
    - name: Install apt-file tool if on Linux
      become: yes
      apt:
        name: apt-file
        state: latest
        update_cache: true
      when: ansible_os_family == 'Debian'
      tags: aptfile


    - name: Install Spotify on Linux
      become: yes
      snap:
        name: spotify
        state: present
      when: ansible_os_family == 'Debian'
      tags: spotify

    - name: Install WhatsApp on Linux
      become: yes
      snap:
        name: whatsdesk
        state: present
      when: ansible_os_family == 'Debian'
      tags: whatsapp


    # - name: Install PyCharm on Linux
    #   include_role:
    #     name: ansible-role-pycharm
    #   vars:
    #     pycharm_version: 2019.3.1
    #     pycharm_edition: community
    #     # pycharm_plugins:
    #         # bash support 1.6.5.171
    #         # - 65772
    #   #when: ansible_os_family == 'Debian'
    #   tags: pycharm

    - name: Install xclip command line utility on Debian
      become: yes
      apt:
        name: xclip
        state: present

    - name: Install members command line utility on Debian
      become: yes
      apt:
        name: members
        state: present

    - name: Install OpenJDK on MacOS
      become: yes
      homebrew_cask:
        name: adoptopenjdk8
        state: present
      when: ansible_os_family == 'Darwin'
      tags: java

    - name: install rclone on Linux
      become: yes
      apt:
        name: rclone
        state: latest
      when: ansible_os_family == 'Debian'
      tags: rclone

    - name: install whois on Linux
      become: yes
      apt:
        name: whois
        state: latest
      when: ansible_os_family == 'Debian'
      tags: whois


    - name: Installing postgres dependencies
      become: yes
      apt: pkg={{ item }}
      with_items:
        - python3-dev
        - python-dev
        - libpq-dev
        - build-essential
        - libssl-dev
        - libffi-dev
        - libgmp3-dev
      tags: postgres

    - name: install postgresql-client
      become: yes
      apt:
        name: postgresql-client
        state: latest
      tags: postgres

  roles:
    - role: ansible-data-science-cli
      tags: data-science-cli

    - role: ansible-git
      tags: git

    - role: markosamuli.pyenv
      vars:
        pyenv_init_shell: false
      tags: pyenv

    # Install packages as current user
    - role: ansible-role-atom
      become: yes
      users:
        - username: "{{ ansible_env.USER }}"
          atom_packages:
          - markdown-preview-plus
          - linter
          - atom-beautify
          - git-plus
      tags: atom

    - role: ansible-docker
      vars:
        docker__edition: "ce"
        docker__state: "latest"
        docker__users: ["{{ ansible_env.USER }}"]
      become: yes
      tags: docker
